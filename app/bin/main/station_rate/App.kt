/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package station_rate

import indexedBy
import kotlinx.serialization.ExperimentalSerializationApi
import station_rate.input.pricing.loadPricingData
import station_rate.input.station.loadStationData
import station_rate.input.stations.metadata.loadStationMetadata

class App {
    val greeting: String
        get() {
            return "Hello World!"
        }

    @ExperimentalSerializationApi
    fun loadInput() {
        val pricingData = loadPricingData()
        return
        val stationInput = loadStationData()
        val metadata = loadStationMetadata()
        val stationMetadata = metadata
            .flatMap { it.lines }
            .flatMap { it.stations }
            .distinctBy { it.id }
            .indexedBy { it.id }

        val grps = stationMetadata.groupBy { it.id }

        val stations = stationInput.map {
            val s = it.stations[0]
            val station = Station(
                s.lat,
                s.lon
            )
            station.names += StationName(it.name_kanji, StationNameType.Kanji)

            grps.getOrDefault(0, listOf())
            grps[0].orEmpty()
            // add english names from metadata
            (grps[0] ?: listOf())
                //.find(s.id)
                // .filter { it.id == s.id }
                .forEach {
                    station.names += StationName(it.name.en, StationNameType.English)
                }

            // Add pricing data
//            pricingData
//                .filter { it.NearestStation == station.englishName }
            
            station
        }
//        val ratings = stations.map { station ->
//            return placesApi.getRestaurantScore(station)
//        }
    }
}

@ExperimentalSerializationApi
fun main(args: Array<String>) {
    val app = App()
    app.loadInput()
}
